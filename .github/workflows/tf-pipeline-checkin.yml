name: 'Terraform'

# on: [push, pull_request]
on:
  push:
    branches:
      - 'feat/TerraformActons_dev'

env:
  TF_LOG: INFO

jobs:
  Terraform-Dev:
    name: 'Terraform on Dev'
    runs-on: ubuntu-latest
    environment: Dev
    defaults:
      run:
        shell: bash
        working-directory: ./tf/TFProjects/tfDatabricks
    steps:
    - name: Checkout
      uses: actions/checkout@v2 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
    - name: Initializing the Dev backend
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      # if: github.ref == 'refs/heads/feat/TerraformActons_dev'
      run: terraform init -backend-config backend/dev.tfvars
    - name: Validating terraform
      # if: github.ref == 'refs/heads/feat/TerraformActons_dev' && github.event_name == 'push'
      run: terraform validate
    - name: Checking the format
      # if: github.ref == 'refs/heads/feat/TerraformActons_dev' && github.event_name == 'push'
      run: terraform fmt -check -recursive

    - name: Plan on Dev
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      # if: github.ref == 'refs/heads/feat/TerraformActons_dev' && github.event_name == 'push'
      run: terraform plan -var-file vars/dev.tfvars

    # - name: Apply on Dev
    #   id: apply
    #   env:
    #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #   if: github.ref == 'refs/heads/feat/TerraformActons_dev' && github.event_name == 'pull_request'
    #   run: terraform apply -auto-approve -var-file vars/dev.tfvars


  # Terraform-Prod:
  #   name: 'Terraform on Prod'
  #   runs-on: ubuntu-latest
  #   environment: Prod
  #   needs: Terraform-Dev
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ./tf
  #   steps: 
  #   - name: Checkout
  #     uses: actions/checkout@v2 
  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: 1.1.9
  #   - name: Initializing the Prod backend
  #     id: init 
  #     if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
  #     run: terraform init -backend-config backend/prod.tfvars
  #     env:
  #       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #   - name: Plan prod
  #     id: plan
  #     if: github.event_name == 'pull_request'
  #     run: terraform plan -var-file vars/prod.tfvars
  #     env:
  #       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #       TF_VAR_github_token: ${{ secrets.ARM_GITHUB_TOKEN }}
  #       TF_VAR_moein_obj_id: ${{ secrets.ARM_USER_OBJ_ID }}
  #       TF_VAR_db_objid: ${{ secrets.ARM_DB_OBJ_ID }}
  #   - name:  Apply prod
  #     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #     run: terraform apply -auto-approve -var-file vars/prod.tfvars
  #     env:
  #       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #       TF_VAR_github_token: ${{ secrets.ARM_GITHUB_TOKEN }}
  #       TF_VAR_moein_obj_id: ${{ secrets.ARM_USER_OBJ_ID }}
  #       TF_VAR_db_objid: ${{ secrets.ARM_DB_OBJ_ID }}